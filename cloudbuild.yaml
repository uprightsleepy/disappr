options:
  logging: CLOUD_LOGGING_ONLY

steps:
  - name: 'golang'
    id: Run tests with coverage check
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        go test ./... -coverprofile=coverage.out
        coverage=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
        echo "Test coverage: $coverage%"
        
        # Extract just the number part (without the decimal)
        coverage_int=${coverage%.*}
        
        # Compare against threshold
        if [ "$coverage_int" -lt 80 ]; then
          echo "Test coverage $coverage% is below threshold of 80%"
          echo "Continuing build despite low coverage (threshold enforcement disabled)"
        else
          echo "Test coverage $coverage% meets threshold of 80%"
        fi

  - name: 'gcr.io/cloud-builders/docker'
    id: Build Docker image
    args:
      [
        'build',
        '-t',
        'us-central1-docker.pkg.dev/$PROJECT_ID/disappr/disappr:$SHORT_SHA',
        '.'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    id: Push image to Artifact Registry
    args: [
      'push',
      'us-central1-docker.pkg.dev/$PROJECT_ID/disappr/disappr:$SHORT_SHA'
    ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Update Cloud Run service
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run services update disappr \
          --image=us-central1-docker.pkg.dev/$PROJECT_ID/disappr/disappr:$SHORT_SHA \
          --region=us-central1

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/disappr/disappr:$SHORT_SHA'